# better prefix key
set -g prefix C-a
bind C-a send-prefix

# better splitting
bind-key \\ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# less colourful status
set -g status-bg colour240
set -g status-fg white

# 256 colors support
set -g default-terminal "screen-256color"

# sane scrolling
set -g mouse on

# When we add/remove windows, renumber them in sequential order
set -g renumber-windows on

set -g focus-events on

set -g status-justify left
set -g status-bg default
set -g status-interval 2

set -g pane-border-style "fg=color238 bg=black"
set -g pane-active-border-style "fg=color71 bg=black"

# Info on left (I don't have a session display for now)
set -g status-left ''

set -g status-position bottom
set -g status-bg colour71
set -g status-fg colour234
set -g status-right '  #[fg=colour234] %Y-%m-%d #[fg=colour234,bold]%H:%M:%S'

set -g status-right-length 50
set -g status-left-length 20

# Set the style for the status bar when there is activity
setw -g window-status-activity-style 'bg=colour71,fg=colour234'

# Set the style for the status bar when a bell is triggered
setw -g window-status-bell-style 'bg=colour71,fg=colour234'

# Set the style for inactive windows
setw -g window-status-format '#I#[fg=colour234,bg=colour71]:#W#[fg=colour234,bg=colour71]#F '

# Set the style for the active window
setw -g window-status-current-format '#[fg=color232,bold,bg=color252]#I#[fg=color232,bold]:#[fg=color232,bold]#W#[fg=color33,bold]#F '

# Set the style for the command prompt
set -g message-command-style 'bg=colour104,fg=colour234'

# Set the style for messages (e.g., command output)
set -g message-style 'bg=colour104,fg=colour234'

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Now you can clear screen with <prefix> l
bind C-l send-keys 'C-l'

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind d split-window -h -c "#{pane_current_path}" -l 35% \; send-keys "btop" C-m \; split-window -v -c "#{pane_current_path}" \; send-keys "lazygit" C-m \; select-pane -t 0 \; send-keys "nvim" C-m \; split-window -v -l 25 -c "#{pane_current_path}"

# list of plugins
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
# TMUX plugin manager (keep at the bottom of tmux.conf)
set -sg escape-time 0
run '~/.tmux/plugins/tpm/tpm'
